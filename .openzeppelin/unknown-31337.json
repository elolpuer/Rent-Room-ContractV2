{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x1d95ae325b9b2308ee9ce8c75f8095be2cfd2fc847f1b9c9ec2e38cf8127c47d"
  },
  "proxies": [
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x8c36442812a0289cd4935b5649eef34ee66f1bddb617bfbe6eb989ef591cbac6",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0x7a7b099832a2848ce9d047e9646a1bb5392b74e43682e521ceb66c4891b6f83c",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x24ea0b5d986575c762e85af6b2abfa630937285a1a034b8a0263c2119ab9ff01",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x3b8e75a123d1951ac1076b56d067bcb5b51886bde39e67c480ceb5049442c558",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0x3da1787bb3548b927c3f4918c8d8481de317f8d405eafbf18e92b5dd5fd542b6",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xc38de6fa83e200010b98355bd2f1af40cde75f2f6807b9abe4fc82b449af959a",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x031beb65788a9c47a088305252ab17650a465f4798c55e6dafd50449ac488946",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xace458d0bd02cafc97d3ec91a964401235036dd0814f8be35ce6120610bc1638",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x2e31cac617b4209b239c00f82b5c53d4d61566f29c9080f17de740334e4dd0c3",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x31c41d649043e79660f0a637bc0d0e47a90f7d2e20624ed6efa612c5226c7bd3",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0xc6ff98209790601820c2efc26ee4d5b585618bfd751ce57b86d6dd8e90ae50f9",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x8ccee6f82d6670c194b9dbae9c645ebbe2aab175093296c67d4cd24e43bb2380",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0xc350b2ac11983f18604c201ae7e9491fc2f408192cafcbd3239c8da0dbf0d837",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0x9cb414524694416167015bcdcd672ee3317424558a7492584e7733e86964229d",
      "kind": "transparent"
    },
    {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0x2be7f7326c9050f7b2bfa929a623af410e2b4526aae0bbaa8aba163e0cdaceac",
      "kind": "transparent"
    }
  ],
  "impls": {
    "7e436c55a9a377a2002e067895d70854ed17082bc3419b77465f9f8ef2029c95": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xa9ecbdd02a86302c0b7bb710f0616f5f1da6a10a553e8fa8aa95a6a9a2634b99",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "rent",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IRent)2077",
            "contract": "TokenStorage",
            "src": "contracts/storage/TokenStorage.sol:12"
          },
          {
            "label": "approveRented",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenStorage",
            "src": "contracts/storage/TokenStorage.sol:14"
          },
          {
            "label": "userPropertyAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenStorage",
            "src": "contracts/storage/TokenStorage.sol:15"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "204",
            "type": "t_struct(Counter)1867_storage",
            "contract": "TokenStorage",
            "src": "contracts/storage/TokenStorage.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IRent)2077": {
            "label": "contract IRent",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1867_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c2c1367b0f1e428b1f306a81f65c91c6e83d25a9aacf000d1cb09d8353782e6e": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xaa4d7451d4f4a5d27430413474f9376a67cc85f6e8697bc5e084092d44505dc6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "commision",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RentStorage",
            "src": "contracts/storage/RentStorage.sol:11"
          },
          {
            "label": "contractEarned",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "RentStorage",
            "src": "contracts/storage/RentStorage.sol:12"
          },
          {
            "label": "properties",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(Property)1707_storage)dyn_storage",
            "contract": "RentStorage",
            "src": "contracts/storage/RentStorage.sol:14"
          },
          {
            "label": "property",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IProperty)579",
            "contract": "RentStorage",
            "src": "contracts/storage/RentStorage.sol:16"
          },
          {
            "label": "renterPropertyAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RentStorage",
            "src": "contracts/storage/RentStorage.sol:18"
          },
          {
            "label": "propertyOnMarket",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(Counter)449_storage",
            "contract": "RentStorage",
            "src": "contracts/storage/RentStorage.sol:19"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Property)1707_storage)dyn_storage": {
            "label": "struct Common.Property[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IProperty)579": {
            "label": "contract IProperty",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)449_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Property)1707_storage": {
            "label": "struct Common.Property",
            "members": [
              {
                "label": "tokenID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "renter",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeDeal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timeToRent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "minTimeToRent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "maxTimeToRent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "deposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "rented",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "onMarket",
                "type": "t_bool",
                "offset": 1,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
